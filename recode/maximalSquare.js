function maximalSquare(matrix) {
    const m = matrix.length;
    const n = matrix[0].length;
    const dp = new Array(m + 1).fill(0).map(item => new Array(n + 1).fill(0));
    let maxSide = 0;
    for (let i = 0; i < m; i++) {
        for (let j = 0; j < n; j++) {
            if (matrix[i][j] === '0') {
                dp[i + 1][j + 1] = 0;
            }
            else {
                if (dp[i][j + 1] === 0 || dp[i + 1][j] === 0 || dp[i][j] === 0) {
                    dp[i + 1][j + 1] = 1;
                    maxSide = Math.max(maxSide, 1);
                }
                else {
                    let side = Math.min(dp[i][j + 1], dp[i + 1][j], dp[i][j]);
                    dp[i + 1][j + 1] = side + 1;
                    maxSide = Math.max(maxSide, side + 1);
                }
            }
        }
    }
    console.log(dp);
    return maxSide * maxSide;
}
;
console.log([["1", "0", "1", "0", "0", "1", "1", "1", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "1"], ["0", "0", "1", "1", "0", "0", "0", "1", "1"], ["0", "1", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "1", "1", "0", "0", "1", "0"], ["0", "1", "1", "1", "1", "1", "1", "0", "1"], ["1", "0", "1", "1", "1", "0", "0", "1", "0"], ["1", "1", "1", "0", "1", "0", "0", "0", "1"], ["0", "1", "1", "1", "1", "0", "0", "1", "0"], ["1", "0", "0", "1", "1", "1", "0", "0", "0"]]);
console.log(maximalSquare([["1", "0", "1", "0", "0", "1", "1", "1", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "1"], ["0", "0", "1", "1", "0", "0", "0", "1", "1"], ["0", "1", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "1", "1", "0", "0", "1", "0"], ["0", "1", "1", "1", "1", "1", "1", "0", "1"], ["1", "0", "1", "1", "1", "0", "0", "1", "0"], ["1", "1", "1", "0", "1", "0", "0", "0", "1"], ["0", "1", "1", "1", "1", "0", "0", "1", "0"], ["1", "0", "0", "1", "1", "1", "0", "0", "0"]]));
